## ビュー内応急エラー表示
	@foreach ($errors->all() as $error) {{ $error }} @endforeach


### コンポーザー
# composer インストール
curl -sS https://getcomposer.org/installer | php

# パスの通ったディレクトリに移動
mv composer.phar /usr/local/bin/composer

# 環境移行後には必ず実行
composer install
composer update

# .envファイル作成後にキー生成
php artisan key:generate


# パーミッション変更(-Rでディレクトリ内も再起処理)
chmod -R 777 /var/www/html/storage
chmod -R 777 /var/www/html/uploads

# .htaccessの下層オーバーライドを許可
# /etc/httpd/conf/httpd.conf に追記
<Directory "/var/www/html/laravel/public">
#    AllowOverride None
     AllowOverride All
</Directory>



# コンフィグキャッシュファイル更新
php artisan config:cache

# オートロードファイル更新
composer dump-autoload

# ルーティングリスト確認
php artisan route:list



### 各生成コマンド

# サービスプロバイダ登録
php artisan make:provider TestServiceProvider
php artisan make:provider GMOPaymentServiceProvider

# Event生成?
php artisan event:generate TestEventServiceProvider



### マイグレーション

# マイグレーションファイル作成
php artisan make:migration

# マイグレーション実行
php artisan migrate

# 指定のマイグレーション実行
php artisan migrate --class=CreateUsersTable

# create例
php artisan make:migration create_admin_password_resets_table --create=admin_password_resets
php artisan make:migration create_paper_sizes_table --create=paper_sizes
php artisan make:migration create_csv_columns_table --create=csv_columns
php artisan make:migration create_logs_table --create=logs
php artisan make:migration create_codes_table --create=codes

php artisan make:migration create_countries_table --create=countries

php artisan make:migration create_gyao_videos_table --create=gyao_videos
php artisan make:migration create_nico_videos_table --create=nico_videos
php artisan make:migration create_tx_videos_table --create=tx_videos


# modify例
php artisan make:migration add_published_at_to_articles_table --table=users
php artisan make:migration modify_published_at_to_users_table --table=users
php artisan make:migration add_published_at_to_products_table --table=products

php artisan make:migration add_published_at_to_test_users_table --table=test_users

php artisan make:migration modify_published_at_to_admins_table --table=admins

# その他
php artisan migrate --force
php artisan migrate:rollback
php artisan migrate:reset
php artisan migrate:refresh

# ロールバック → 再マイグレート → SEEDも実行
php artisan migrate:refresh --seed


# SEED実行
php artisan db:seed

# 指定のSEED実行
php artisan db:seed --class=UsersTableSeeder



### メール
# Swift Mail 送信モード
php artisan tinker

# 送信実行 => 1が返れば成功
Mail::raw('Test Mail', function($message) { $message->to('wada@n-di.co.jp')->subject('test'); });